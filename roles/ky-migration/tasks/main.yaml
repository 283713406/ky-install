---
- name: KylinCloud | Checking core components (1)
  shell: >
    {{ bin_dir }}/kubectl get deploy -n kylincloud-system ky-account
  register: check_account
  failed_when: "check_account.stderr and 'NotFound' not in check_account.stderr"

- name: KylinCloud | Checking core components (2)
  shell: >
    {{ bin_dir }}/kubectl get deploy -n kylincloud-system ky-apigateway
  register: check_apigateway
  failed_when: "check_apigateway.stderr and 'NotFound' not in check_apigateway.stderr"

- name: KylinCloud | Checking core components (3)
  shell: >
    {{ bin_dir }}/kubectl get deploy -n kylincloud-system ky-account -o jsonpath='{.spec.replicas}'
  register: check_account_replicas
  failed_when: "check_account_replicas.stderr and 'NotFound' not in check_account_replicas.stderr"
  when:
    - check_account.rc == 0

- name: KylinCloud | Checking core components (4)
  shell: >
    {{ bin_dir }}/kubectl get deploy -n kylincloud-system ky-apigateway -o jsonpath='{.spec.replicas}'
  register: check_apigateway_replicas
  failed_when: "check_apigateway_replicas.stderr and 'NotFound' not in check_apigateway_replicas.stderr"
  when:
    - check_apigateway.rc == 0

- block:
  - name: KylinCloud | Creating manifests
    template:
      src: "{{ item.file }}.j2"
      dest: "{{ kylincloud_dir }}/{{ item.file }}"
    with_items:
    - { path: migration, file: ky-upgrade.yaml }
    - { path: migration, file: ky-devops-migration.yaml }

  - name: KylinCloud | Creating migration job
    shell: >
      {{ bin_dir }}/kubectl apply -f {{ kylincloud_dir }}/ky-upgrade.yaml

  - name: KylinCloud | Checking devops status
    shell: >
      {{ bin_dir }}/kubectl get pod -n kylincloud-devops-system | grep "ky-jenkins" | wc -l
    register: devops_check

  - name: KylinCloud | Creating devops migration job
    shell: >
      {{ bin_dir }}/kubectl apply -f {{ kylincloud_dir }}/ky-devops-migration.yaml
    when:
      - devops_check.stdout != "0"

  - name: KylinCloud | Getting migration job status
    shell: >
      {{ bin_dir }}/kubectl get pod -n kylincloud-system -l job-name=ky-upgrade --no-headers | awk '{print $3}'
    register: job_status
    until: job_status.stdout.find('Completed') != -1
    retries: 90
    delay: 20

  - name: KylinCloud | Getting devops migration job status
    shell: >
      {{ bin_dir }}/kubectl get pod -n kylincloud-system -l job-name=ky-devops-migration --no-headers | awk '{print $3}'
    register: job_status
    until: job_status.stdout.find('Completed') != -1
    retries: 90
    delay: 20
    when:
      - devops_check.stdout != "0"

  - name: KylinCloud | Stop ky-account
    shell: >
      {{ bin_dir }}/kubectl delete deploy -n kylincloud-system ky-account

  - name: KylinCloud | Stop ky-apigateway
    shell: >
      {{ bin_dir }}/kubectl delete deploy -n kylincloud-system ky-apigateway

  - name: KylinCloud | Updating ky-core status
    shell: >
      {{ bin_dir }}/kubectl patch cc ky-installer
      --type merge
      -p '{"status": {"core": {"migration": null}}}'
      -n kylincloud-system
    register: import
    failed_when: "import.stderr and 'Warning' not in import.stderr"
    until: import is succeeded
    retries: 5
    delay: 3
  when:
    - check_account.rc == 0
    - check_apigateway.rc == 0
    - check_account_replicas.stdout != "0"
    - check_apigateway_replicas.stdout != "0"
    - "'NotFound' not in check_account.stderr"
    - "'NotFound' not in check_apigateway.stderr"
    - "'NotFound' not in check_account_replicas.stderr"
    - "'NotFound' not in check_apigateway_replicas.stderr"